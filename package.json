{
  "name": "@obinexus/obix",
  "version": "0.1.0",
  "description": "Optimized Browser Interface eXperience (OBIX) - A high-performance web application framework leveraging automaton state minimization and AST optimization techniques to minimize unnecessary state transitions and DOM operations",
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "author": {
    "name": "Nnamdi Michael Okpala",
    "email": "support@obinexus.org",
    "url": "https://obinexus.org"
  },
  "license": "UNLICENSED",
  "type": "commonjs",
  "public": true,
  "repository": {
    "type": "git",
    "url": "https://gitlab.org/obinexus.pkg/obix"
  },
  "homepage": "https://docs.obinexus.org/obix",
  "bugs": {
    "url": "https://gitlab.org/obinexus.pkg/obix/issues",
    "email": "support@obinexus.org"
  },
  "scripts": {
    "prepare": "husky install",
    "dev": "./scripts/setup/dev-workflow.sh",
    "env:setup": "source ./scripts/setup/env-setup.sh",
    "build": "npm run build:ts && npm run build:types",
    "build:ts": "ts-node scripts/build/compile/index.ts",
    "build:types": "npx tsc --emitDeclarationOnly --outDir dist/types",
    "build:dev": "ts-node scripts/build/compile/index.ts --dev",
    "build:prod": "./scripts/setup/dev-workflow.sh build:prod",
    "build:cjs": "npx tsc --project tsconfig.cjs.json",
    "build:esm": "npx tsc --project tsconfig.esm.json",
    "build:with-babel": "npm run babel:build && npm run build:ts",
    "build:with-analysis": "npm run prebuild && npm run build",
    "build:core": "rollup -c --environment TARGET:core",
    "build:cli": "rollup -c --environment TARGET:cli",
    "build:obix": "npm run babel:validate && npm run babel:test && npx babel src --out-dir dist/obix --config-file ./babel.obix.config.js --extensions \".ts,.tsx\"",
    "build:policy": "npm run prebabel && npx babel src/core/policy --out-dir dist/policy --config-file ./babel.obix.config.js",
    "cli:provider:validate": "npx jest tests/qa/modules/cli-provider --config jest.qa.config.js",
    "cli:provider:test": "npm run cli:provider:validate && npm run test:unit tests/unit/cli/provider",
    "cli:provider:integration": "npm run cli:provider:test && npm run test:integration tests/integration/cli-provider",
    "cli:build": "npx tsc --project tsconfig.cli.json",
    "cli:build:watch": "npx tsc --project tsconfig.cli.json --watch",
    "cli:validate": "npx tsc --project tsconfig.cli.json --noEmit",
    "core:build": "npx tsc --project tsconfig.core.json",
    "core:build:watch": "npx tsc --project tsconfig.core.json --watch",
    "core:validate": "npx tsc --project tsconfig.core.json --noEmit",
    "build:cli-core": "npm run core:build && npm run cli:build",
    "build:cli-core:watch": "concurrently \"npm run core:build:watch\" \"npm run cli:build:watch\"",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest tests/unit --config jest.unit.config.js",
    "test:unit:watch": "jest tests/unit --config jest.unit.config.js --watch",
    "test:unit:coverage": "jest tests/unit --config jest.unit.config.js --coverage",
    "test:integration": "jest tests/integration --config jest.integration.config.js",
    "test:performance": "node scripts/test/performance/index.js",
    "test:ci": "jest --ci --coverage",
    "test:cli-provider:coverage": "npx jest tests/qa/modules/cli-provider --config jest.qa.config.js --coverage",
    "test:cli-provider:watch": "npx jest tests/qa/modules/cli-provider --config jest.qa.config.js --watch",
    "test:cli-provider:debug": "npx jest tests/qa/modules/cli-provider --config jest.qa.config.js --verbose --no-cache",
    "qa:cli": "npm run cli:provider:validate && npm run cli:validate",
    "qa:core": "npm run core:validate && npm run test:unit tests/unit/core",
    "qa:provider-integration": "npm run qa:cli && npm run qa:core && npm run cli:provider:integration",
    "qa:namespace": "npm run namespace:validate:full",
    "qa:imports": "npm run imports:validate",
    "qa:lint": "npm run lint",
    "qa:test": "npm run test:coverage",
    "qa:build": "npm run build",
    "qa:full": "npm run qa:namespace && npm run qa:imports && npm run qa:lint && npm run qa:test && npm run qa:build",
    "lint": "eslint src --config config/eslint/base/.eslintrc.js",
    "lint:fix": "eslint src --config config/eslint/base/.eslintrc.js --fix",
    "lint:cli": "eslint src/cli --config config/eslint/cli/.eslintrc.js",
    "lint:cli:fix": "eslint src/cli --config config/eslint/cli/.eslintrc.js --fix",
    "lint:core": "eslint src/core --config config/eslint/core/.eslintrc.js",
    "lint:core:fix": "eslint src/core --config config/eslint/core/.eslintrc.js --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx}\"",
    "format:cli": "prettier --write \"src/cli/**/*.{ts,tsx}\"",
    "format:core": "prettier --write \"src/core/**/*.{ts,tsx}\"",
    "format:providers": "prettier --write \"src/cli/providers/**/*.{ts,tsx}\" \"src/core/*/providers/**/*.{ts,tsx}\"",
    "docs": "typedoc --options config/typedoc.json",
    "docs:serve": "npx serve docs/generated",
    "docs:cli-provider": "typedoc --options config/typedoc.cli.json src/cli/providers",
    "docs:core-providers": "typedoc --options config/typedoc.core.json src/core/*/providers",
    "docs:providers": "npm run docs:cli-provider && npm run docs:core-providers",
    "clean": "rimraf dist build coverage reports",
    "clean:all": "rimraf dist build coverage reports node_modules",
    "babel:build": "npx babel src --out-dir dist/babel --extensions \".ts,.tsx\" --config-file ./babel.config.js",
    "babel:validate": "npx babel --version && node -c babel.obix.config.js",
    "babel:test": "npm run prebabel && npx babel src/core/policy/decorators/generated --out-dir /tmp/test-babel --config-file ./babel.obix.config.js",
    "validate": "./scripts/setup/dev-workflow.sh validate",
    "validate:babel": "npm run prebabel && npx babel src --out-dir /tmp/babel-test --config-file ./babel.obix.config.js --dry-run",
    "validate:imports": "bash scripts/validate-imports.sh",
    "validate:cli-provider": "bash scripts/validate-cli-provider.sh",
    "validate:cli-core-integration": "bash scripts/validate-cli-core-integration.sh",
    "setup": "./scripts/setup/dev-setup.sh",
    "setup:cli-provider": "npm run cli:build && npm run cli:provider:validate",
    "setup:dev-provider": "npm run setup:cli-provider && npm run dev:integration",
    "benchmark": "node scripts/test/performance/benchmarks.js",
    "example": "node scripts/dev/examples/run.js",
    "cli": "ts-node src/cli/index.ts",
    "dev:cli": "npm run cli:validate && npm run cli:provider:test",
    "dev:core": "npm run core:validate && npm run qa:core",
    "dev:integration": "npm run dev:cli && npm run dev:core && npm run qa:provider-integration",
    "dev:validate": "npm run imports:validate && npm run lint && npm run test:unit",
    "dev:migrate": "npm run imports:fix:auto && npm run dev:validate",
    "dev:full-check": "npm run namespace:validate:full && npm run test:coverage && npm run lint",
    "ci:pre-build": "npm run namespace:validate && npm run imports:validate",
    "ci:validate": "npm run ci:pre-build && npm run lint && npm run test:ci",
    "ci:build": "npm run ci:validate && npm run build",
    "ci:cli-provider": "npm run cli:provider:validate && npm run validate:cli-provider",
    "ci:cli-core": "npm run qa:cli && npm run qa:core && npm run validate:cli-core-integration",
    "ci:provider-full": "npm run ci:cli-provider && npm run ci:cli-core && npm run build:cli-core",
    "maintenance:cli-provider": "npm run lint:cli:fix && npm run format:cli && npm run cli:provider:test",
    "maintenance:core-provider": "npm run lint:core:fix && npm run format:core && npm run qa:core",
    "maintenance:providers": "npm run maintenance:cli-provider && npm run maintenance:core-provider && npm run format:providers",
    "maintenance:namespace": "npm run namespace:validate:full && npm run imports:fix:auto",
    "maintenance:full": "npm run clean && npm run setup && npm run maintenance:namespace && npm run qa:full",
    "monitor:cli-provider": "npm run test:cli-provider:watch",
    "monitor:cli-core": "concurrently \"npm run monitor:cli-provider\" \"npm run test:unit:watch tests/unit/core\"",
    "monitor:imports": "npm run imports:validate && echo 'Import monitoring complete'",
    "debug:cli-provider": "npm run test:cli-provider:debug",
    "debug:cli-core-integration": "npm run debug:cli-provider && npm run test:integration:debug tests/integration/cli-provider",
    "analyze:cli-provider": "bash scripts/analyze-cli-provider.sh",
    "analyze:cli-core-dependencies": "bash scripts/analyze-cli-core-dependencies.sh",
    "analyze:modules": "bash scripts/analyze-modules.sh",
    "prebuild": "npm run validate:imports && npm run analyze:modules",
    "prebabel": "npx tsc --noEmit --skipLibCheck",
    "prebuild:obix": "npm run validate:babel",
    "postbuild": "node scripts/verify-outputs.js",
    "release:prepare": "node scripts/release/prepare/index.js",
    "release:publish": "node scripts/release/publish/index.js",
    "release:cli-provider": "npm run ci:provider-full && npm run docs:providers",
    "release:prepare:providers": "npm run release:cli-provider && npm run maintenance:providers",
    "namespace:validate": "bash scripts/tools/validate-namespace-tree.sh",
    "namespace:validate:full": "bash scripts/tools/obix-namespace-validator.sh",
    "namespace:migrate": "ts-node scripts/tools/import-migration-tool.ts",
    "namespace:migrate:dry-run": "ts-node scripts/tools/import-migration-tool.ts --dry-run",
    "namespace:fix": "bash scripts/tools/obix-namespace-validator.sh --fix",
    "namespace:report": "npm run namespace:validate:full && echo 'Review validation-report.log for details'",
    "imports:validate": "bash scripts/validate-imports.sh",
    "imports:analyze": "npm run namespace:validate:full",
    "imports:fix:auto": "npm run namespace:migrate && npm run lint:fix",
    "imports:fix:manual": "npm run namespace:migrate:dry-run && echo 'Review proposed changes before applying'",
    "util:analyze-modules": "bash scripts/analyze-modules.sh",
    "util:module-metrics": "npm run util:analyze-modules && npm run namespace:report",
    "util:dependency-graph": "echo 'Generating OBIX framework dependency analysis...' && npm run namespace:validate:full",
    "sinphase:validate": "ts-node scripts/sinphase-validator.ts",
    "qa:matrix": "jest tests/qa --config jest.qa.config.js"
  },
  "keywords": [
    "automaton",
    "state",
    "minimization",
    "performance",
    "optimization",
    "react",
    "DOM",
    "AST",
    "browser",
    "ui",
    "interface",
    "experience",
    "obinexus",
    "nnamdi-okpala",
    "state-machine",
    "data-oriented-programming",
    "dop"
  ],
  "engines": {
    "node": ">=14.0.0"
  },
  "dependencies": {
    "@babel/runtime": "^7.23.5"
  },
  "devDependencies": {
    "@babel/cli": "^7.23.4",
    "@babel/core": "^7.23.5",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-decorators": "^7.23.5",
    "@babel/plugin-transform-runtime": "^7.23.4",
    "@babel/preset-env": "^7.23.5",
    "@babel/preset-typescript": "^7.23.3",
    "@jest/test-sequencer": "^29.7.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.13.9",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "babel-plugin-macros": "^3.1.0",
    "babel-plugin-transform-typescript-metadata": "^0.3.2",
    "chalk": "^4.1.2",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^8.10.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.9.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "lint-staged": "^15.2.2",
    "prettier": "^2.8.8",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "typedoc": "^0.25.12",
    "typescript": "^5.3.3"
  },
  "peerDependencies": {
    "@babel/core": "^7.0.0"
  },
  "optionalDependencies": {
    "@babel/plugin-syntax-jsx": "^7.23.3"
  },
  "lint-staged": {
    "src/cli/**/*.{ts,tsx}": [
      "eslint --config config/eslint/cli/.eslintrc.js --fix",
      "prettier --write",
      "npm run cli:provider:validate"
    ],
    "src/core/**/*.{ts,tsx}": [
      "eslint --config config/eslint/core/.eslintrc.js --fix",
      "prettier --write",
      "npm run qa:core"
    ],
    "src/cli/providers/**/*.{ts,tsx}": [
      "eslint --config config/eslint/cli/.eslintrc.js --fix",
      "prettier --write",
      "npm run cli:provider:test"
    ],
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": ".git/hooks/commit-msg"
    }
  },
  "babel": {
    "extends": "./babel.config.js"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/@obinexus"
  },
  "files": [
    "dist",
    "src",
    "babel.config.js",
    "tsconfig.json",
    "README.md",
    "LICENSE"
  ],
  "sideEffects": false,
  "funding": {
    "type": "corporate",
    "url": "https://obinexus.org/sponsor"
  }
}